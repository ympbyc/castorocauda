(ns castorocauda.framework
  "Public api of castorocauda. This is the file you should :require.
   type State = (State -> [a State])")


(deftype parsed-html [tagname attributes children])
(def parsed-html-atom (atom (parsed-html. :body {} nil)))


(add-watch html :dom-watcher html-watcher) ;;このhtmlはdom
(defn html-watcher [key a old new]
  (swap! parsed-html-atom (partial update-parsed-html-atom new)))
(defn update-parsed-html-atom [new old]
  (parsed-html. :body
                {}
                (if (or (seq? new) (list? new))
                  (parse-html new)
                  (parse-html (list new)))))
(add-watch parsed-html-atom :parsed-html-watcher parsed-html-watcher)
(defn parsed-html-watcher [key a old new]
  (let [delta  (html-delta (.-children old) (.-children new) [])]
    (doseq [[typ path a b] delta]
      (let [node (select-path-dom (body) path)]
        (case typ
              :att (if (= a :value)
                     (set! (.-value node) (str b))
                     (.setAttribute node (name a) (render-attribute-value a b)))
              :rem-att (.removeAttribute node (name a))
              :html (set! (.-innerHTML node) (apply str (map html a))))))
    (doseq [plugin @active-plugins]
      (fix-dom plugin))))
